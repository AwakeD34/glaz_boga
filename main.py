import psycopg2
from config import host, user, password, db_name1, db_name2, db_name3
from aiogram import Bot, Dispatcher, types
from aiogram.utils import executor
import asyncio
import logging
import re


# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
my_bot = Bot(token='TOKEN')
dp = Dispatcher(my_bot)


@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    await message.reply('üîé —Å–µ—Ä–≤–∏—Å—ã –ø–æ –∫–æ—Ç–æ—Ä—ã–º –±—É–¥–µ—Ç –æ—Å—É—â–µ—Å—Ç–≤–ª—è—Ç—å—Å—è –ø–æ–∏—Å–∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏:\n\n'
                        'üî¥ 1. Mamba.ru\n'
                        'üü† 2. Sberbank.ru\n'
                        'üü° 3. Telegram.org\n'
                        '\n‚¨áÔ∏è –í–æ–∑–º–æ–∂–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n'
                        ' ‚îú üì± - 904777777 \\ 79378886666 \n'
                        ' ‚îî üÜî - id Telegramm (–±–µ–∑ @)\n'
                        '\n ‚ÑπÔ∏è –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:\n'
                        'https://telegra.ph/kratkoe-opisanie-po-deanonu-v-telegram-03-01', disable_web_page_preview=True)
    
    
@dp.message_handler()
async def search_phone(message: types.Message):
    phone_number = message.text
    # logger.info –±—É–¥–µ—Ç –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –∫–∞–∫–æ–π (ID) –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ç–µ–ª–µ–≥—Ä–∞–º–º, –∫–æ—Ç–æ—Ä—ã–π –∏—Å–∫–∞–ª –∏–Ω—Ñ—É –ø–æ –Ω–æ–º–µ—Ä—É.
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ID: {message.from_user.id} | –í—ã–ø–æ–ª–Ω–∏–ª –∑–∞–ø—Ä–æ—Å –ø–æ: {message.text}")

    try:
        # –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ø–µ—Ä–≤–æ–π –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
        connection = psycopg2.connect(
            host=host,
            port=5432,
            user=user,
            password=password,
            database=db_name1
        )
        # –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫–æ –≤—Ç–æ—Ä–æ–π –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —Ç–æ–º –∂–µ —Å–µ—Ä–≤–µ—Ä–µ
        connection2 = psycopg2.connect(
            host=host,
            port=5432,
            user=user,
            password=password,
            database=db_name2
        )
        # –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Ç—Ä–µ—Ç–µ–π –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —Ç–æ–º –∂–µ —Å–µ—Ä–≤–µ—Ä–µ
        connection3 = psycopg2.connect(
            host=host,
            port=5432,
            user=user,
            password=password,
            database=db_name3
        )


        user_phone_number = message.text
        cleared_phone_number = re.sub(r'^(\+7|8)', '', user_phone_number)
        # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –ø–æ–∏—Å–∫–∞
        reply_message = await message.reply('‚è≥ –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–æ–∏—Å–∫, —ç—Ç–æ –∑–∞–π–º–µ—Ç –≤—Ä–µ–º—è...')
        await asyncio.sleep(3)
        await my_bot.delete_message(message.chat.id, reply_message.message_id)


        with connection.cursor() as cursor, connection2.cursor() as cursor2, connection3.cursor() as cursor3:
            sql_query = f"SELECT * FROM base_1 WHERE phone LIKE '%{phone_number}%'"
            cursor.execute(sql_query)

            phone_number = phone_number.replace('.0', '')
            sql_query2 = f"SELECT * FROM base_2 WHERE phone LIKE '%{phone_number}%'"
            cursor2.execute(sql_query2)

            sql_query3 = f"SELECT * FROM base_3 WHERE phone LIKE '%{phone_number}%' OR uid = '{phone_number}' OR uid LIKE '%{phone_number}%'"
            cursor3.execute(sql_query3)

            # –ø–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∑–∞–ø—Ä–æ—Å–æ–≤
            results1 = cursor.fetchall()
            results2 = cursor2.fetchall()
            results3 = cursor3.fetchall()

        reply = ""

        if results1:
            for row in results1:
                reply += f"Mamba\n‚îú üì≤ –ù–æ–º–µ—Ä: {row[0]}\n‚îú üìß –ü–æ—á—Ç–∞: {row[1]}\n‚îî ‚è∫ PW:\n{row[2]}\n"

        if results2:
            for row in results2:
                reply += f"\nSberbank\n‚îú ü§µ‚Äç –ò–º—è: {row[0]} {row[1]} {row[2]}\n‚îú üóì –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è: {row[3]}\n‚îî üìß –ü–æ—á—Ç–∞: {row[5]}\n"

        if results3:
            for row in results3:
                reply += f"\nTelegram\n‚îú ü§µ‚Äç Nickname: {row[0]} {row[1]}\n‚îú üì≤ –ù–æ–º–µ—Ä: {row[2]}\n‚îî üÜî: {row[3]}\n"
        
        await message.reply(reply)

        connection.close()
        connection2.close()
        connection3.close()

    except Exception as ex: 
        await message.reply("üö´ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.\n\n‚ÄºÔ∏è –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–æ–∏—Å–∫:\n9022223334 –∏–ª–∏ 79022223334\n\nID –¢–µ–ª–µ–≥—Ä–∞–º–º: 27348723")
        print(ex)


if __name__ == '__main__':
    executor.start_polling(dp)